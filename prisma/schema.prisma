// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Term {
  id       Int      @id @default(autoincrement())
  title    String   @db.Text()
  text     String   @db.Text()
  isActive Boolean  @default(true)
  Client   Client[]
}

model Guidelines {
  id       Int     @id @default(autoincrement())
  title    String  @db.Text()
  text     String  @db.Text()
  isActive Boolean @default(true)
}

model PresenceToken {
  id        Int      @id @default(autoincrement())
  token     String   @db.VarChar(255)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Admin {
  id       Int     @id @default(autoincrement())
  login    String  @db.VarChar(255)
  password String  @db.VarChar(255)
  isAdmin  Boolean @default(true)
}

model Client {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  email       String        @unique @db.VarChar(255)
  password    String        @db.VarChar(255)
  gender      String        @db.VarChar(1)
  status      String        @default("active")
  termId      Int?
  termStatus  String        @default("pending")
  badge       Int           @default(0) @db.Integer
  photo       String?       @db.VarChar(255)
  comments    String?       @db.VarChar(255)
  birthDate   DateTime?     @db.Timestamp(6)
  height      Int?          @default(0)
  weight      Float?        @default(0)
  company     String?
  Appointment Appointment[]
  term        Term?         @relation(fields: [termId], references: [id])
}

model Appointment {
  id          Int       @id @default(autoincrement())
  date        DateTime  @db.Timestamp(6)
  hour        Int
  clientId    Int
  status      String    @default("Pendente")
  createdAt   DateTime  @default(now())
  comments    String?   @db.VarChar(255)
  canceledAt  DateTime? @db.Timestamp(6)
  confirmedIn DateTime? @db.Timestamp(6)

  client Client @relation(fields: [clientId], references: [id])
}

model MuscleGroup {
  id   Int    @id @default(autoincrement())
  name String
  banner String?
  exercises Exercises[]
}

model Exercises {
  id      Int @id @default(autoincrement())
  groupId Int
  name String
  url String
  cover String?
  description String?

  group MuscleGroup @relation(fields: [groupId], references: [id])
}
